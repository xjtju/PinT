; PinT configuration file, 
; thanks to .INI parser https://github.com/benhoyt/inih  
;
; There are not any assumptions about the measurement unit standard for all the physical variables used in the program. 
; You must be careful to make sure the physical UNIT consistency for specific problem.  

[domain]         ; time-space domain of the problem   
ndim =  1        ; dimension number : 1,2,3. if ndim is not THREE, the unused dimension parameters will be ignored automacally
                 ; NOTE:
                 ; In some special rare cases, deteriorated dimensions may be occur, 
                 ; for 3D example, when using 2 cores to divide Z directions with only 2 cell-height,
                 ; the divided grid will become (deteriorate to) 2D (Z height is ONE).
                 ; the program can not be able to deal this situation correctly. 

Tspan = 0.5        ; time domain 
Nt = 5000000      ; the time steps of the whole time domain serially if using fine solver

Xspan = 1.0      ; space domain, geographical size  
Yspan = 1.0
Zspan = 1.0

Nx = 1000       ; the whole grid space size, all discrete cell numbers. 
Ny = 6       ; NOTE: 
Nz = 12       ; the size of each dimension not includes the most outer guard cells(border) outside the geographical domain,, 
             ; the framework will automacally create the proper border cells outside the space domain,
             ; and the size must be well divided (no remainders left) by the corresponding CPU cores assinged to the direction, 
             ; otherwise, the calculated result may be incorrect, alghough the program may be normally converged. 
              
nguard  = 1     ;  the nguard cell number 
bc_type = 0     ;  boundary type. 0:always unchanged, default is ZERO; 1: reflect. 
bc_val  = 0     ;  valid when bc_type=0

[parareal]      ; PinT control parameter
                ; Assert( tsnum * spnumx * spnumy * spnumz EQUALS the number of MPI processes ) 
tsnum  = 4      ; the number of time partitions(slices), parallel processes along time domain 
                
spnumx = 1      ; the number of space partitions (CPU cores) in one time slice, x direction  
spnumy = 1      ; y direction
spnumz = 1      ; z direction

pipelined  = 0        ; pipeline Parareal is used or not, default is ZERO (not used) 
kpar_limit = 99     ; for pipeline mode only, synchonization mode is the same with the time slices  
rfc_ = 50            ; fine steps / coarse steps, not the accuracy value of rfc in Parareal 
converge_eps = 1.0e-6

sml_res = 1.0e-12   ; the threshold for residual control. Due to the "Machine Epsilon" or rounding error, 
                    ; Sometimes, according to the parareal algorithm, 
                    ; the residual should be ZERO at the end of certain tima slice 
                    ; where fine solver has already continuously evolved over all the time slice before and including it, 
                    ; but in practice, the calculation value is not ZERO, 
                    ; despite it is very small, it will has an unignorable impact on convergency due to  accumulating effect.
                    ; when residual is less than the threshold, res is regarded as ZERO.
[monitor]
debug_pre   = dbug  ; output file name prefix for debug or other uses. 8 chars limit.
                    ; all result data of the whole space domain can be aggregated and written into the file,
                    ; but at the current version, only pure text format is supported. 
                    ; so it is not recommended for dumping out large data of massive runnings 
                    ; the output file name will be [debug_pre].[mytid].[mysid].txt for local, and [debug_pre].[mytid].all.txt for global
                    ; mytid is the current time slice id ; mysid is the space division id of the current time slice.
                    ; for easy to debug by human eyes, the recommended resolution is below 10^3 cells at small running  

with_coord = 0      ; text output with coordinates or not, default is 'true(1)', used only for grid inner variables 
monitor_pre = prof  ; performance data file. 8 chars limit 

[pfm]             ; problem-specific configuration is also supported.
ac_dval = 1          ; Allen-Cahn equation 
ac_kval = 16000    
ac_beta = -0.128  

